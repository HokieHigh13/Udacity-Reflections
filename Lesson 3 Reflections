When would you want to use a remote repository rather than keeping all your work
local?

    I would use a remote respository if I was working on a group project. 
    Team members could not easily view my local repository and vice versa.
    Also, when working on a corporate project. Compan would have an easier
    time with the overhead.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    We have been taught to create a commit to reflect a logical change. Updating
    Git's repository is a logical change. Thus, this is something we should create
    manually instead of updating.
    
Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Fork replicates repositories on GitHub. Clone replicates repositories from Github
    to another remote. Branch creates different commits. I would use a Fork if I am
    trying to start from someone's progress. I would want to clone so I can make my changes
    with affecting someone elses repository. I would want to branch when I am working
    on a part of the project that isn't part of the master yet. 

What is the benefit of having a copy of the last known state of the remote
stored locally?

    Well you essentially would have a pseudo master in which you could work on different branches
    but still have a working master. 

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    The whole point of programming is to enable an individual to work from their own outlet. 
    The whole point of programming from an internet perspectic is to enable an individual
    to work from their own outlet anywhere in the world with internet connect. 
    Git and Github facilitates collaboration across the internet by centralizing the process.
    Without those mechanics or any similar mechanics, individuals would be left to email changes
    which lack the tools necessary for software development. I don't think you could make it any easier
    from my limited standpoint but you can make it harder by overcomplicating the linear process.
    Too many unnecessary commits. Wrong description format. There kind of steps can make it harder.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
