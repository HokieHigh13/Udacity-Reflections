How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It pinpointed me to the sections of code that had the difference

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It would enable me to see further back in time and discover how changers were made over time

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Manually creating a commit allows a user to commit at his or her discretion. 
    However, it is because of his or her descretion that invites user error and/or poor judgement.
    Automatically creating a commit ensures that a file has a history. 
    However, the versioned code may not be usable. 

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git was developed for programmers in mind. Google Docs was not. 

How can you use the commands git log and git diff to view the history of files?

    Git log will allow me to see changes to particular sections in the code. Get diff
    allows me to see changes to that particular section over time if that particular section underwent
    extenensive changes 

How might using version control make you more confident to make changes that
could break something?

    With an adequate history of the file, you can make "file breaker" changes and still go back to a working
    version of the file 

Now that you have your workspace set up, what do you want to try using Git for?

    Keep track of history and make changes without fear! 
